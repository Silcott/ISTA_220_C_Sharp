-- Name: James Silcott
-- Homework: ISTA220-01
-- Date: July 9, 2020

1. What is a console app?
A console application is a computer program designed to be used via a text-only computer interface, such as a text terminal, the command line interface of some operating systems (Unix, DOS, etc.) or the text-based interface included with most Graphical User Interface (GUI) operating systems, such as the Win32 console in Microsoft Windows, the Terminal in macOS, and xterm in Unix. A user typically interacts with a console application using only a keyboard and display screen, as opposed to GUI applications, which normally require the use of a mouse or other pointing device. Many console applications such as command line interpreters are command line tools, but numerous text-based user interface (TUI) programs also exist.


2. List two differences between .NET Framework and .NET Core. Note that in this class, we will be
writing C# applications in .NET Framework and ASP.NET applications in NET Core.
.NET Framework enabled developers to build applications for a single platform — Windows. But .NET Core is cross-platform, and supports three distinct operating systems — Windows, OS X, and Linux. The compatibility makes it easier for developers to build cross-platform applications, and port their existing applications from one platform to another.


3. What does Main() (the main method) do in a console application?
The Main method is the entry point of a C# application. (Libraries and services do not require a Main method as an entry point.) When the application is started, the Main method is the first method that is invoked.


4. Describe these three files: TextHello.sln, TextHello.csproj, and AssemblyInfo.cs.
TextHello.sln,  is a structure file used for organizing projects in Microsoft Visual Studio. It contains text-based information about the project environment and project state. 
TextHello.csproj, are used by Visual Studio to store references to items within a project and to store compilation options.
AssemblyInfo.cs. is a source code file written in C# (pronounced "C Sharp"), an object-oriented programming language created by Microsoft for use with the . NET Framework.



5. What is the purpose of a namespace?
A namespace is a declarative region that provides a scope to the identifiers (the names of types, functions, variables, etc) inside it. Namespaces are used to organize code into logical groups and to prevent name collisions that can occur especially when your code base includes multiple libraries.



6. Describe specifically what using statements do.
using statement To allow the programmer to explicitly perform these clean-up activities, objects can provide a Dispose method that can be invoked when the object is no longer needed. The C# using statement defines a boundary for the object outside of which, the object is automatically destroyed


7. What is the entry point for a console app? What is the entry point for a UWP app?
A string between 1 and 256 characters in length, representing the task handling the extension. This is normally the fully namespace-qualified name of a Windows Runtime type. If EntryPoint is not specified, the EntryPoint defined for the app is used instead.


8. What is an assembly?
An assembly is a file that is automatically generated by the compiler upon successful compilation of every . NET application. It can be either a Dynamic Link Library or an executable file. ... An Assembly contains Intermediate Language (IL) code, which is similar to Java byte code


9. How many different versions of the WriteLine() method does the Console class contain?
13


10. What is the relationship between an assembly and a namespace?
Net Namespace provides the fundamental unit of logical code grouping while an assembly provides a fundamental unit of physical code grouping. Namespaces is a logical group of related classes that can be used by any other language targeting the Microsoft . Net framework .


11. What is a graphical app?
Use graphics instead of the console


12. What does Build do?
Starts the debug


13. (Not in book) What is bytecode? What is Microsoft CIL? Do you think that CIL is bytecode? Why
or why not?
Bytecode is the term given to intermediate assembly languages. C#,VB and Java all compile to a form of byte code.
CIL was originally known as Microsoft Intermediate Language (MSIL) during the beta releases of the . NET languages. 
No, its not.


14. What does Debug do?
Debugging is the process in which a developer (who could be the author or not of the code he is trying to debug), using various tools available to him, makes an effort to change part of a previously written code in order to get rid of an error that was not caught at the compile (or syntax checking) time
